#include <iostream>
#include <string>
#include <algorithm>

class Solution {
public:
    std::string addBinary(std::string a, std::string b) {
        std::string result;
        int carry = 0;
        int max_length = std::max(a.size(), b.size());

       
        reverse(a.begin(), a.end());
        reverse(b.begin(), b.end());

        for (int i = 0; i < max_length; ++i) {
            int bit_a = i < a.size() ? a[i] - '0' : 0;
            int bit_b = i < b.size() ? b[i] - '0' : 0;

            
            int total = bit_a + bit_b + carry;
            carry = total / 2;
            result.push_back((total % 2) + '0');
        }

        
        if (carry) {
            result.push_back('1');
        }

        
        std::reverse(result.begin(), result.end());
        return result;
    }
};
